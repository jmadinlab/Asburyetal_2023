text = element_text(family = "Times-Roman", size = 10),
legend.position = "none",
plot.margin = margin(0,1,0,0,"cm")) +
labs(y = "", x = "Depth, m") +
scale_y_continuous(breaks = c((0-wave_mn)/wave_sd,
(.5-wave_mn)/wave_sd,
(1-wave_mn)/wave_sd,
(1.5-wave_mn)/wave_sd,
(2-wave_mn)/wave_sd,
(2.5-wave_mn)/wave_sd),
labels = c(0,.5,1,1.5,2,2.5)) +
scale_x_continuous(breaks = c((0-dep_mn)/dep_sd,
(5-dep_mn)/dep_sd,
(10-dep_mn)/dep_sd,
(15-dep_mn)/dep_sd,
(20-dep_mn)/dep_sd,
(25-dep_mn)/dep_sd,
(30-dep_mn)/dep_sd),
labels = c(0,5,10,15,20,25,30)) +
scale_fill_gradient(name = expression(paste("Height \n range")),
high = "#006A4D",
low = "linen",
na.value = "white") +
annotate(geom = "text", x = 1.1, y = -3.2, family = "Times-Roman", label = "p = 0.006", size = 3) +
coord_cartesian(clip = "off", xlim = c((0-dep_mn)/dep_sd,(30-dep_mn)/dep_sd))
AR <- ggplot(new_tempA_R, aes(depth_s, wave_max_log10_s)) +
geom_raster(aes(fill=as.numeric(pred))) +
geom_point(data = dA, aes(x = .data[[v1]], y = .data[[v2]]),
shape = 21, size = 1, stroke = 0.5, color = "black") +
theme(axis.text = element_text(color = "black"),
panel.grid = element_blank(),
panel.background = element_rect(fill = 'white', colour = "black"),
text = element_text(family = "Times-Roman", size = 10),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "none",
plot.margin = margin(0,0,0,1,"cm")) +
labs(y = "Exposure, kW/m (log10)", x = "", title = "Aggregate reef") +
scale_y_continuous(breaks = c((0-wave_mn)/wave_sd,
(.5-wave_mn)/wave_sd,
(1-wave_mn)/wave_sd,
(1.5-wave_mn)/wave_sd,
(2-wave_mn)/wave_sd,
(2.5-wave_mn)/wave_sd),
labels = c(0,.5,1,1.5,2,2.5)) +
scale_x_continuous(breaks = c((0-dep_mn)/dep_sd,
(5-dep_mn)/dep_sd,
(10-dep_mn)/dep_sd,
(15-dep_mn)/dep_sd,
(20-dep_mn)/dep_sd,
(25-dep_mn)/dep_sd,
(30-dep_mn)/dep_sd),
labels = c(0,5,10,15,20,25,30)) +
scale_fill_gradient(name = expression(paste("Rugosity")),
high = "#B55000",
low = "linen",
na.value = "white") +
annotate(geom = "text", x = 1.1, y = -3.2, family = "Times-Roman", label = "p = 0.129", size = 3) +
annotate(geom="text", x = -4.2, y = -.5, label = "Rugosity", angle = 90, family = "Times-Roman", fontface = "bold", size = 5) +
coord_cartesian(clip = "off", xlim = c((0-dep_mn)/dep_sd,(30-dep_mn)/dep_sd))
PR <- ggplot(new_tempP_R, aes(depth_s, wave_max_log10_s)) +
geom_raster(aes(fill=as.numeric(pred))) +
geom_point(data = dP, aes(x = .data[[v1]], y = .data[[v2]]),
shape = 21, size = 1, stroke = 0.5, color = "black") +
theme(axis.text = element_text(color = "black"),
panel.grid = element_blank(),
panel.background = element_rect(fill = 'white', colour = "black"),
text = element_text(family = "Times-Roman", size = 10),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "none",
plot.margin = margin(0,0.5,0,0.5,"cm")) +
labs(y = "", x = "", title = "Pavement") +
scale_y_continuous(breaks = c((0-wave_mn)/wave_sd,
(.5-wave_mn)/wave_sd,
(1-wave_mn)/wave_sd,
(1.5-wave_mn)/wave_sd,
(2-wave_mn)/wave_sd,
(2.5-wave_mn)/wave_sd),
labels = c(0,.5,1,1.5,2,2.5)) +
scale_x_continuous(breaks = c((0-dep_mn)/dep_sd,
(5-dep_mn)/dep_sd,
(10-dep_mn)/dep_sd,
(15-dep_mn)/dep_sd,
(20-dep_mn)/dep_sd,
(25-dep_mn)/dep_sd,
(30-dep_mn)/dep_sd),
labels = c(0,5,10,15,20,25,30)) +
scale_fill_gradient(name = expression(paste("Rugosity")),
high = "#005B8E",
low = "linen",
na.value = "white") +
annotate(geom = "text", x = 1.1, y = -3.2, family = "Times-Roman", label = "p = 0.002", size = 3) +
coord_cartesian(clip = "off", xlim = c((0-dep_mn)/dep_sd,(30-dep_mn)/dep_sd))
RR <- ggplot(new_tempR_R, aes(depth_s, wave_max_log10_s)) +
geom_raster(aes(fill=as.numeric(pred))) +
geom_point(data = dR, aes(x = .data[[v1]], y = .data[[v2]]),
shape = 21, size = 1, stroke = 0.5, color = "black") +
theme(axis.text = element_text(color = "black"),
panel.grid = element_blank(),
panel.background = element_rect(fill = 'white', colour = "black"),
text = element_text(family = "Times-Roman", size = 10),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "none",
plot.margin = margin(0,1,0,0,"cm")) +
labs(y = "", x = "", title = "Rock & Boulder") +
scale_y_continuous(breaks = c((0-wave_mn)/wave_sd,
(.5-wave_mn)/wave_sd,
(1-wave_mn)/wave_sd,
(1.5-wave_mn)/wave_sd,
(2-wave_mn)/wave_sd,
(2.5-wave_mn)/wave_sd),
labels = c(0,.5,1,1.5,2,2.5)) +
scale_x_continuous(breaks = c((0-dep_mn)/dep_sd,
(5-dep_mn)/dep_sd,
(10-dep_mn)/dep_sd,
(15-dep_mn)/dep_sd,
(20-dep_mn)/dep_sd,
(25-dep_mn)/dep_sd,
(30-dep_mn)/dep_sd),
labels = c(0,5,10,15,20,25,30)) +
scale_fill_gradient(name = expression(paste("Rugosity")),
high = "#006A4D",
low = "linen",
na.value = "white") +
annotate(geom = "text", x = 1.1, y = -3.2, family = "Times-Roman", label = TeX("$p = 9.06 \\times 10^{-9}"), size = 3) +
coord_cartesian(clip = "off", xlim = c((0-dep_mn)/dep_sd,(30-dep_mn)/dep_sd))
AD <- ggplot(new_tempA_D, aes(depth_s, wave_max_log10_s)) +
geom_raster(aes(fill=as.numeric(pred))) +
geom_point(data = dA, aes(x = .data[[v1]], y = .data[[v2]]),
shape = 21, size = 1, stroke = 0.5, color = "black") +
theme(axis.text = element_text(color = "black"),
panel.grid = element_blank(),
panel.background = element_rect(fill = 'white', colour = "black"),
text = element_text(family = "Times-Roman", size = 10),
legend.position = "none",
plot.margin = margin(0,0,0,1,"cm")) +
labs(y = "Exposure, kW/m (log10)", x = "") +
scale_y_continuous(breaks = c((0-wave_mn)/wave_sd,
(.5-wave_mn)/wave_sd,
(1-wave_mn)/wave_sd,
(1.5-wave_mn)/wave_sd,
(2-wave_mn)/wave_sd,
(2.5-wave_mn)/wave_sd),
labels = c(0,.5,1,1.5,2,2.5)) +
scale_x_continuous(breaks = c((0-dep_mn)/dep_sd,
(5-dep_mn)/dep_sd,
(10-dep_mn)/dep_sd,
(15-dep_mn)/dep_sd,
(20-dep_mn)/dep_sd,
(25-dep_mn)/dep_sd,
(30-dep_mn)/dep_sd),
labels = c(0,5,10,15,20,25,30)) +
scale_fill_gradient(name = expression(paste("Fractal \n dimension")),
high = "#B55000",
low = "linen",
na.value = "white") +
annotate(geom = "text", x = 1.1, y = -3.2, family = "Times-Roman", label = "p = 0.288", size = 3) +
annotate(geom="text", x = -4.2, y = -.5, label = "Fractal dimension", angle = 90, family = "Times-Roman", fontface = "bold", size = 5) +
coord_cartesian(clip = "off", xlim = c((0-dep_mn)/dep_sd,(30-dep_mn)/dep_sd))
PD <- ggplot(new_tempP_D, aes(depth_s, wave_max_log10_s)) +
geom_raster(aes(fill=as.numeric(pred))) +
geom_point(data = dP, aes(x = .data[[v1]], y = .data[[v2]]),
shape = 21, size = 1, stroke = 0.5, color = "black") +
theme(axis.text = element_text(color = "black"),
panel.grid = element_blank(),
panel.background = element_rect(fill = 'white', colour = "black"),
text = element_text(family = "Times-Roman", size = 10),
legend.position = "none",
plot.margin = margin(0,0.5,0,0.5,"cm")) +
labs(y = "", x = "") +
scale_y_continuous(breaks = c((0-wave_mn)/wave_sd,
(.5-wave_mn)/wave_sd,
(1-wave_mn)/wave_sd,
(1.5-wave_mn)/wave_sd,
(2-wave_mn)/wave_sd,
(2.5-wave_mn)/wave_sd),
labels = c(0,.5,1,1.5,2,2.5)) +
scale_x_continuous(breaks = c((0-dep_mn)/dep_sd,
(5-dep_mn)/dep_sd,
(10-dep_mn)/dep_sd,
(15-dep_mn)/dep_sd,
(20-dep_mn)/dep_sd,
(25-dep_mn)/dep_sd,
(30-dep_mn)/dep_sd),
labels = c(0,5,10,15,20,25,30)) +
scale_fill_gradient(name = expression(paste("Fractal \n dimension")),
high = "#005B8E",
low = "linen",
na.value = "white") +
annotate(geom = "text", x = 1.1, y = -3.2, family = "Times-Roman", label = "p = 0.044", size = 3) +
coord_cartesian(clip = "off", xlim = c((0-dep_mn)/dep_sd,(30-dep_mn)/dep_sd))
RD <- ggplot(new_tempR_D, aes(depth_s, wave_max_log10_s)) +
geom_raster(aes(fill=as.numeric(pred))) +
geom_point(data = dR, aes(x = .data[[v1]], y = .data[[v2]]),
shape = 21, size = 1, stroke = 0.5, color = "black") +
theme(axis.text = element_text(color = "black"),
panel.grid = element_blank(),
panel.background = element_rect(fill = 'white', colour = "black"),
text = element_text(family = "Times-Roman", size = 10),
legend.position = "none",
plot.margin = margin(0,1,0,0,"cm")) +
labs(y = "", x = "") +
scale_y_continuous(breaks = c((0-wave_mn)/wave_sd,
(.5-wave_mn)/wave_sd,
(1-wave_mn)/wave_sd,
(1.5-wave_mn)/wave_sd,
(2-wave_mn)/wave_sd,
(2.5-wave_mn)/wave_sd),
labels = c(0,.5,1,1.5,2,2.5)) +
scale_x_continuous(breaks = c((0-dep_mn)/dep_sd,
(5-dep_mn)/dep_sd,
(10-dep_mn)/dep_sd,
(15-dep_mn)/dep_sd,
(20-dep_mn)/dep_sd,
(25-dep_mn)/dep_sd,
(30-dep_mn)/dep_sd),
labels = c(0,5,10,15,20,25,30)) +
scale_fill_gradient(name = expression(paste("Fractal \n dimension")),
high = "#006A4D",
low = "linen",
na.value = "white") +
annotate(geom = "text", x = 1.1, y = -3.2, family = "Times-Roman", label = "p = 0.008", size = 3) +
coord_cartesian(clip = "off", xlim = c((0-dep_mn)/dep_sd,(30-dep_mn)/dep_sd))
int.figure <- grid.arrange(AR + labs(subtitle = "(a)"), PR + labs(subtitle = "(b)"), RR + labs(subtitle = "(c)"),
AD + labs(subtitle = "(d)"), PD + labs(subtitle = "(e)"), RD + labs(subtitle = "(f)"),
AH + labs(subtitle = "(g)"), PH + labs(subtitle = "(h)"), RH + labs(subtitle = "(i)"),
nrow = 3, ncol = 3)
interact.fig <- grid.arrange(int.figure, mylegend, heights = c(10,1))
# Height range
temp.h <- as.data.frame(summary(mod.sw.H)$coefficients)
temp.h <- tibble::rownames_to_column(temp.h, "VALUE")
h.conf <- as.data.frame(confint(mod.sw.H, level = 0.95))
h.conf <- tibble::rownames_to_column(h.conf, "VALUE")
temp.h <- merge(temp.h, h.conf)
temp.h$variable_plot <- c("Geological Reef Age","Coral Cover","Depth","Depth x Exposure",
"Habitat","Habitat", "Geological Reef Age", "Coral Cover","Depth",
"Depth x Exposure","Exposure","Habitat","Geological Reef Age", "Coral Cover",
"Depth", "Depth x Exposure","Exposure", "Exposure")
temp.h$habitat <- c("AGR","AGR","AGR","AGR","AGR",
"PAV","PAV","PAV","PAV",
"PAV","PAV","ROB","ROB",
"ROB","ROB","ROB","ROB","AGR")
for (o in 1:nrow(temp.h)) {
if(sign(temp.h[o,6]) == sign(temp.h[o,7])) {
temp.h$shape[o] <- 19}
else {
temp.h$shape[o] <- 1}}
H.estimate <- ggplot() +
geom_hline(yintercept = 0, color = "grey") +
geom_errorbar(aes(x = temp.h$variable_plot,
ymin = temp.h$`2.5 %`,
ymax = temp.h$`97.5 %`,
group = temp.h$habitat),
position = position_dodge(width = 1), width = .5) +
geom_point(aes(x = temp.h$variable_plot,
y = temp.h$Estimate,
color = temp.h$habitat),
shape = temp.h$shape,
position = position_dodge(width = 1), size = 3) +
coord_flip() +
theme_classic() +
scale_color_manual(values = c("AGR" = "#D55E00",
"PAV" = "#0072B2",
"ROB" = "#009E73")) +
labs(x = "", y = "\nParameter Estimate", color = "Habitat type") +
geom_vline(xintercept = c(1.5,2.5,3.5,4.5,5.5), color = "lightgrey", linetype = "dashed") +
ggtitle("(c) Height range") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
text = element_text(family = "Times-Roman", size = 10),
axis.text.y=element_blank())
temp.h2 <- temp.h[temp.h$variable_plot != "Habitat",]
H.estimate2 <- ggplot() +
geom_hline(yintercept = 0, color = "grey") +
geom_errorbar(aes(x = temp.h2$variable_plot,
ymin = temp.h2$`2.5 %`,
ymax = temp.h2$`97.5 %`,
group = temp.h2$habitat),
position = position_dodge(width = 1), width = .5) +
geom_point(aes(x = temp.h2$variable_plot,
y = temp.h2$Estimate,
color = temp.h2$habitat),
shape = temp.h2$shape,
position = position_dodge(width = 1), size = 3) +
coord_flip() +
theme_classic() +
scale_color_manual(values = c("AGR" = "#D55E00",
"PAV" = "#0072B2",
"ROB" = "#009E73")) +
labs(x = "", y = "\nParameter Estimate", color = "Habitat type") +
geom_vline(xintercept = c(1.5,2.5,3.5,4.5,5.5), color = "lightgrey", linetype = "dashed") +
ggtitle("(c) Height range") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
text = element_text(family = "Times-Roman", size = 10),
axis.text.y=element_blank())
# Rugosity
temp.r <- as.data.frame(summary(mod.sw.R)$coefficients)
temp.r <- tibble::rownames_to_column(temp.r, "VALUE")
r.conf <- as.data.frame(confint(mod.sw.R, level = 0.95))
r.conf <- tibble::rownames_to_column(r.conf, "VALUE")
temp.r <- merge(temp.r, r.conf)
temp.r$variable_plot <- c("Geological Reef Age","Coral Cover","Depth","Depth x Exposure",
"Habitat","Habitat", "Geological Reef Age", "Coral Cover","Depth",
"Depth x Exposure","Exposure","Habitat","Geological Reef Age", "Coral Cover",
"Depth","Depth x Exposure","Exposure", "Exposure")
temp.r$habitat <- c("AGR","AGR","AGR","AGR","AGR",
"PAV","PAV","PAV","PAV",
"PAV","PAV","ROB","ROB",
"ROB","ROB","ROB","ROB","AGR")
for (o in 1:nrow(temp.r)) {
if(sign(temp.r[o,6]) == sign(temp.r[o,7])) {
temp.r$shape[o] <- 19}
else {
temp.r$shape[o] <- 1}}
R.estimate <- ggplot() +
geom_hline(yintercept = 0, color = "grey") +
geom_errorbar(aes(x = temp.r$variable_plot,
ymin = temp.r$`2.5 %`,
ymax = temp.r$`97.5 %`,
group = temp.r$habitat),
position = position_dodge(width = 1), width = .5) +
geom_point(aes(x = temp.r$variable_plot,
y = temp.r$Estimate,
color = temp.r$habitat),
shape = temp.r$shape,
position = position_dodge(width = 1), size = 3) +
coord_flip() +
theme_classic() +
scale_color_manual(values = c("AGR" = "#D55E00",
"PAV" = "#0072B2",
"ROB" = "#009E73")) +
labs(x = "", y = "\nParameter Estimate", color = "Habitat type") +
geom_vline(xintercept = c(1.5,2.5,3.5,4.5,5.5), color = "lightgrey", linetype = "dashed") +
ggtitle("(a) Rugosity") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
text = element_text(family = "Times-Roman", size = 10))
temp.r2 <- temp.r[temp.r$variable_plot != "Habitat",]
R.estimate2 <- ggplot() +
geom_hline(yintercept = 0, color = "grey") +
geom_errorbar(aes(x = temp.r2$variable_plot,
ymin = temp.r2$`2.5 %`,
ymax = temp.r2$`97.5 %`,
group = temp.r2$habitat),
position = position_dodge(width = 1), width = .5) +
geom_point(aes(x = temp.r2$variable_plot,
y = temp.r2$Estimate,
color = temp.r2$habitat),
shape = temp.r2$shape,
position = position_dodge(width = 1), size = 3) +
coord_flip() +
theme_classic() +
scale_color_manual(values = c("AGR" = "#D55E00",
"PAV" = "#0072B2",
"ROB" = "#009E73")) +
labs(x = "", y = "\nParameter Estimate", color = "Habitat type") +
geom_vline(xintercept = c(1.5,2.5,3.5,4.5,5.5), color = "lightgrey", linetype = "dashed") +
ggtitle("(a) Rugosity") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
text = element_text(family = "Times-Roman", size = 10))
# Fractal dimension
temp.d <- as.data.frame(summary(mod.sw.D)$coefficients)
temp.d <- tibble::rownames_to_column(temp.d, "VALUE")
d.conf <- as.data.frame(confint(mod.sw.D, level = 0.95))
d.conf <- tibble::rownames_to_column(d.conf, "VALUE")
temp.d <- merge(temp.d, d.conf)
temp.d$variable_plot <- c("Geological Reef Age","Coral Cover","Depth","Depth x Exposure",
"Habitat","Habitat", "Geological Reef Age", "Coral Cover","Depth",
"Depth x Exposure","Exposure","Habitat","Geological Reef Age", "Coral Cover",
"Depth","Depth x Exposure","Exposure", "Exposure")
temp.d$habitat <- c("AGR","AGR","AGR","AGR","AGR",
"PAV","PAV","PAV","PAV",
"PAV","PAV","ROB","ROB",
"ROB","ROB","ROB","ROB","AGR")
for (o in 1:nrow(temp.d)) {
if(sign(temp.d[o,6]) == sign(temp.d[o,7])) {
temp.d$shape[o] <- 19}
else {
temp.d$shape[o] <- 1}}
D.estimate <- ggplot() +
geom_hline(yintercept = 0, color = "grey") +
geom_errorbar(aes(x = temp.d$variable_plot,
ymin = temp.d$`2.5 %`,
ymax = temp.d$`97.5 %`,
group = temp.d$habitat),
position = position_dodge(width = 1), width = .5) +
geom_point(aes(x = temp.d$variable_plot,
y = temp.d$Estimate,
color = temp.d$habitat),
shape = temp.d$shape,
position = position_dodge(width = 1), size = 3) +
coord_flip() +
theme_classic() +
scale_color_manual(values = c("AGR" = "#D55E00",
"PAV" = "#0072B2",
"ROB" = "#009E73")) +
labs(x = "", y = "\nParameter Estimate", color = "Habitat type") +
geom_vline(xintercept = c(1.5,2.5,3.5,4.5,5.5), color = "lightgrey", linetype = "dashed") +
ggtitle("(b) Fractal dimension") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
text = element_text(family = "Times-Roman", size = 10),
axis.text.y=element_blank())
temp.d2 <- temp.d[temp.d$variable_plot != "Habitat",]
D.estimate2 <- ggplot() +
geom_hline(yintercept = 0, color = "grey") +
geom_errorbar(aes(x = temp.d2$variable_plot,
ymin = temp.d2$`2.5 %`,
ymax = temp.d2$`97.5 %`,
group = temp.d2$habitat),
position = position_dodge(width = 1), width = .5) +
geom_point(aes(x = temp.d2$variable_plot,
y = temp.d2$Estimate,
color = temp.d2$habitat),
shape = temp.d2$shape,
position = position_dodge(width = 1), size = 3) +
coord_flip() +
theme_classic() +
scale_color_manual(values = c("AGR" = "#D55E00",
"PAV" = "#0072B2",
"ROB" = "#009E73")) +
labs(x = "", y = "\nParameter Estimate", color = "Habitat type") +
geom_vline(xintercept = c(1.5,2.5,3.5,4.5,5.5), color = "lightgrey", linetype = "dashed") +
ggtitle("(b) Fractal dimension") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
text = element_text(family = "Times-Roman", size = 10),
axis.text.y=element_blank())
sup4.1 <- grid.arrange(R.estimate, D.estimate, H.estimate,
nrow = 1, ncol = 3, widths = c(1.5,1,1))
sup4 <- grid.arrange(sup4.1, mylegend, heights = c(10,1))
sup4.1.2 <- grid.arrange(R.estimate2, D.estimate2, H.estimate2,
nrow = 1, ncol = 3, widths = c(1.5,1,1))
sup4.2 <- grid.arrange(sup4.1.2, mylegend, heights = c(10,1))
#### FIGURE S5 ####
cor <- svyglm(coral_s ~ 0 + habitat + depth_s:habitat + age_s:habitat + wave_max_log10_s:habitat + depth_s:wave_max_log10_s:habitat, design = des)
summary(cor)
summ(cor)
temp.c <- as.data.frame(summary(cor)$coefficients)
temp.c <- tibble::rownames_to_column(temp.c, "VALUE")
c.conf <- as.data.frame(confint(cor, level = 0.95))
c.conf <- tibble::rownames_to_column(c.conf, "VALUE")
temp.c <- merge(temp.c, c.conf)
temp.c$variable_plot <- c("Habitat","Geological Reef Age","Depth","Depth x Exposure","Exposure",
"Habitat","Geological Reef Age","Depth","Depth x Exposure","Exposure",
"Habitat","Geological Reef Age","Depth","Depth x Exposure","Exposure")
temp.c$habitat <- c("AGR","AGR","AGR","AGR","AGR",
"PAV","PAV","PAV","PAV","PAV",
"ROB","ROB","ROB","ROB","ROB")
for (o in 1:nrow(temp.c)) {
if(sign(temp.c[o,6]) == sign(temp.c[o,7])) {
temp.c$shape[o] <- 19}
else {
temp.c$shape[o] <- 1}}
coral.relat <- ggplot() +
geom_hline(yintercept = 0, color = "grey") +
geom_point(aes(x = temp.c$variable_plot,
y = temp.c$Estimate,
color = temp.c$habitat),
shape = temp.c$shape,
position = position_dodge(width = 1), size = 3) +
coord_flip() +
theme_classic() +
scale_color_manual(values = c("AGR" = "#D55E00",
"PAV" = "#0072B2",
"ROB" = "#009E73")) +
labs(x = "", y = "\nParameter Estimate", color = "Habitat type") +
geom_vline(xintercept = c(1.5,2.5,3.5,4.5), color = "lightgrey", linetype = "dashed") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
text = element_text(family = "Times-Roman", size = 10))
sup5 <- grid.arrange(coral.relat, mylegend, heights = c(10,1))
#### FIGURE S6 ####
hab_depth <- ggplot(data3) +
geom_boxplot(aes(x = habitat, y = depth), fill = c("#D55E00", "#0072B2",  "#009E73")) +
labs(y = "Depth, m", x = "") +
theme_classic() +
theme(text = element_text(family = "Times-Roman", size = 12)) +
scale_x_discrete(limits = c("AGR","PAV","ROB"),
labels = c("Aggregate reef",
"Pavement",
"Rock & Boulder"))
hab_age <- ggplot(data3) +
geom_boxplot(aes(x = habitat, y = age), fill = c("#D55E00", "#0072B2",  "#009E73")) +
labs(y = "Geological reef age, mya", x = "") +
theme_classic() +
theme(text = element_text(family = "Times-Roman", size = 12)) +
scale_x_discrete(limits = c("AGR","PAV","ROB"),
labels = c("Aggregate reef",
"Pavement",
"Rock & Boulder"))
hab_wave <- ggplot(data3) +
geom_boxplot(aes(x = habitat, y = log10(wave_max)), fill = c("#D55E00", "#0072B2",  "#009E73")) +
labs(y = "Exposure, kW/m (log10)", x = "Habitat type") +
theme_classic() +
theme(text = element_text(family = "Times-Roman", size = 12)) +
scale_x_discrete(limits = c("AGR","PAV","ROB"),
labels = c("Aggregate reef",
"Pavement",
"Rock & Boulder"))
hab_coral <- ggplot(data3) +
geom_boxplot(aes(x = habitat, y = CORAL), fill = c("#D55E00", "#0072B2",  "#009E73")) +
labs(y = "Coral Cover, %", x = "Habitat type") +
theme_classic() +
theme(text = element_text(family = "Times-Roman", size = 12)) +
scale_x_discrete(limits = c("AGR","PAV","ROB"),
labels = c("Aggregate reef",
"Pavement",
"Rock & Boulder"))
sup6 <-  grid.arrange(hab_depth + ggtitle("(a)"), hab_age + ggtitle("(b)"),
hab_wave + ggtitle("(c)"), hab_coral + ggtitle("(d)"), nrow = 2, ncol = 2)
